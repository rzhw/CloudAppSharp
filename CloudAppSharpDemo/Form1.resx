<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAM8AAAAeCAYAAACL40rVAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADZGlUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS4wLWMwNjAgNjEuMTM0Nzc3LCAyMDEwLzAyLzEyLTE3OjMyOjAwICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNv
        bS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlw
        ZS9SZXNvdXJjZVJlZiMiIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIgeG1w
        TU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjU1MzU1QjFGNDY5Q0RGMTFBQjg5ODg2NDczMDk4
        QzY0IiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOjQ0MDM4RTNDQTVFRTExREY4NUJGREFENDdBNTZD
        RTgyIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOjQ0MDM4RTNCQTVFRTExREY4NUJGREFENDdBNTZD
        RTgyIiB4bXA6Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDUzUgV2luZG93cyI+IDx4bXBNTTpE
        ZXJpdmVkRnJvbSBzdFJlZjppbnN0YW5jZUlEPSJ4bXAuaWlkOjNEMDg5MTNGRUVBNURGMTE5OTI5QTUw
        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
        +QfIlu4UC9kURwAAAABJRU5ErkJggg==
</value>
  </data>
</root>